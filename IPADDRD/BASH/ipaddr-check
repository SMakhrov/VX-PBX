#!/bin/bash
# Find IP duplicates in collected reports
DIR="/run/ipaddrd"
DIR_R="/run/ipaddrd/reports"
FILE_RRL="/run/ipaddrd/tmp/RRL"

PROC=`basename $0`
mail="root"

[ -f "/etc/ipaddr-check/ipaddr-check.conf" ] && . "/etc/ipaddr-check/ipaddr-check.conf"

umask 027
mkdir -p "${DIR}"
mkdir -p "${DIR_R}"
chown :zabbix "${DIR}"

log="logger -s -p local7.notice -t ${PROC} -- "

_exit () {
  eval ${log} '\*\* BREAK'
  exit 0
}

trap "_exit" SIGINT SIGTERM

eval ${log} "\*\* START checking reports in \"${DIR_R}\" for IP duplicates"

DUP_=""
DUP_C_=""
DUP_I_=""
iter=0
FLOOD=0
RRL=0
while : ; do
  DUP="" # RED ALERT(s)
  DUP_I="" # Internal dup(s) detected (single uuid)
  DUP_C="" # The same (addr|host) with different uuid's: m.b. agent was restarted
  DUP_F="" # Flood/spoofing: too many reports with distinct uuid, but the same internals
           # Collector must mitigate flood by means of RRL, and there we must trigger inquest

  if [ $iter -gt 99 ]; then
    if [ `pgrep -fc -- ipaddr-collector` -lt 1 ]; then
      echo "No one \"ipaddr-collector\" process is running!" | /usr/bin/mail -s "Check that \"ipaddr-collector\" service is running on \"`hostname -f`\"!" "${mail}"
    fi
  fi

  iter=$((iter - 1))
  if [ $iter -lt 0 ]; then
    iter=100
    find "${DIR_R}" -not -newermt '1 hour ago' -delete
  fi

  v4=`grep -R ^v4=1 "${DIR_R}" | sort -k 2 | uniq -d -f 1 | awk '{print $2}'` # | grep -v "169.254.169.254"
  if [ ! -z "${v4}" ]; then # Otherwise, read() iterates over empty v4!!!
    while read dup
    do
      hosts=`grep -Rl "${dup}" "${DIR_R}" | xargs egrep -h "^(addr|host)=" | cut -d ':' -f 1 | sort`
      a=`echo "$hosts" | uniq | egrep -h "^(addr)="`
      h=`echo "$hosts" | uniq | egrep -h "^(host)="`
      line=`echo "$dup:" $a :: $h`
      if [ `echo "$hosts" | uniq | egrep -hc "^(addr)="` -gt 1 -o `echo "$hosts" | uniq | egrep -hc "^(host)="` -gt 1 ]; then
        # DUP!
        DUP+="$line
"
      else
        # Suspicious: internal dup, or agent was restarted
        count=`grep -Rl "${dup}" "${DIR_R}" | wc -l`
        if [ $count -gt 1 ]; then
          DUP_C+="$count: $line
"
        else
          DUP_I+="$line
"
        fi
      fi
    done <<< "${v4}"
  fi

  # DUP
  echo "$DUP" | head -n -1 > "${DIR}/dup.new"
  chown :zabbix "${DIR}/dup.new"
  mv "${DIR}/dup.new" "${DIR}/dup"

  if [ "${DUP}" != "" ] && [ "${DUP}" != "${DUP_}" ]; then
    echo -e "${DUP}" | /usr/bin/mail -s "IP DUP(s) was just detected by \"`hostname -f`\"" "${mail}"
    DUP_="${DUP}"
  fi

  # Internal DUP
  echo "$DUP_I" | head -n -1 > "${DIR}/dup_i.new"
  chown :zabbix "${DIR}/dup_i.new"
  mv "${DIR}/dup_i.new" "${DIR}/dup_i"

  if [ "${DUP_I}" != "" ] && [ "${DUP_I}" != "${DUP_I_}" ]; then
    echo -e "${DUP_I}" | /usr/bin/mail -s "(Internal) IP DUP(s) was just detected by \"`hostname -f`\"" "${mail}"
    DUP_I_="${DUP_I}"
  fi

  # Deal with logged changes
  echo "$DUP_C" | egrep "^[2-9]:" | cut -d ' ' -f 1,3- | sort -u > "${DIR}/dup_c.new"
  chown :zabbix "${DIR}/dup_c.new"
  mv "${DIR}/dup_c.new" "${DIR}/dup_c"

  # Flood/spoofing!
  echo "$DUP_C" | egrep -v "^([2-9]:|$)" | cut -d ' ' -f 1,3- | sort -u | tail -n -1 > "${DIR}/dup_f.new"
  chown :zabbix "${DIR}/dup_f.new"
  mv "${DIR}/dup_f.new" "${DIR}/dup_f"

  if [ -s "${DIR}/dup_f" ]; then
    if [ ${FLOOD} -eq 0 ]; then
      FLOOD=1
      cat "${DIR}/dup_f" | /usr/bin/mail -s "Flood/spoofing was just detected by \"`hostname -f`\"" "${mail}"
    fi
  else
    FLOOD=0
  fi

  if [ -s "${FILE_RRL}" ]; then # RRL was activated by collector!
    if [ "`find /run/ipaddrd/tmp/RRL -newermt '1 minute ago'`" != "" ]; then
      if [ ${RRL} -eq 0 ]; then
        RRL=1
        tail -n 100 "${FILE_RRL}" | /usr/bin/mail -s "RRL was activated by collector on host \"`hostname -f`\"!" "${mail}"
      fi
    else
      RRL=0
    fi
  fi

  for (( i=0; i<7; i++ ))
  do
    sleep 1
  done
done
