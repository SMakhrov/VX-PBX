[general]
;
; Global settings for call queues
;
; Persistent Members
;    Store each dynamic member in each queue in the astdb so that
;    when asterisk is restarted, each member will be automatically
;    read into their recorded queues. Default is 'yes'.
;
persistentmembers = yes
;
; AutoFill Behavior
;    The old/current behavior of the queue has a serial type behavior
;    in that the queue will make all waiting callers wait in the queue
;    even if there is more than one available member ready to take
;    calls until the head caller is connected with the member they
;    were trying to get to. The next waiting caller in line then
;    becomes the head caller, and they are then connected with the
;    next available member and all available members and waiting callers
;    waits while this happens. The new behavior, enabled by setting
;    autofill=yes makes sure that when the waiting callers are connecting
;    with available members in a parallel fashion until there are
;    no more available members or no more waiting callers. This is
;    probably more along the lines of how a queue should work and
;    in most cases, you will want to enable this behavior. If you
;    do not specify or comment out this option, it will default to no
;    to keep backward compatibility with the old behavior.
;
autofill = no
;
; Monitor Type
;    By setting monitor-type = MixMonitor, when specifying monitor-format
;    to enable recording of queue member conversations, app_queue will
;    now use the new MixMonitor application instead of Monitor so
;    the concept of "joining/mixing" the in/out files now goes away
;    when this is enabled. You can set the default type for all queues
;    here, and then also change monitor-type for individual queues within
;    queue by using the same configuration parameter within a queue
;    configuration block. If you do not specify or comment out this option,
;    it will default to the old 'Monitor' behavior to keep backward
;    compatibility.
;
monitor-type = MixMonitor
;
; UpdateCDR behavior.
;    This option is implemented to mimic chan_agents behavior of populating
;    CDR dstchannel field of a call with an agent name, which you can set
;    at the login time with AddQueueMember membername parameter.
;
; updatecdr = no

;
; Note that a timeout to fail out of a queue may be passed as part of
; an application call from extensions.conf:
; Queue(queuename,[options],[optionalurl],[announceoverride],[timeout])
; example: Queue(dave,t,,,45)

; shared_lastcall will make the lastcall and calls received be the same in
; members logged in more than one queue.
; This is useful to make the queue respect the wrapuptime of another queue
; for a shared member
;
shared_lastcall=no

announce-frequency=0
announce-holdtime=no
announce-position=no
autopause=no
autopausebusy=no
autopausedelay=0
autopauseunavail=no
eventmemberstatus=yes
eventwhencalled=yes
joinempty=yes
leavewhenempty=no
maxlen=600 ; by KAA
memberdelay=0
penaltymemberslimit=0
periodic-announce-frequency=30
queue-callswaiting=queue-callswaiting
queue-thankyou=''
queue-thereare=queue-thereare
queue-youarenext=queue-youarenext
reportholdtime=no
retry=15
ringinuse=yes
servicelevel=60
strategy=ringall
timeout=0
timeoutpriority=app
timeoutrestart=no
weight=0
wrapuptime=0


[Q_Test]
maxlen = 600
autopause = no
retry = 3
wrapuptime = 3
;musicclass = TEST
timeout = 0 ; 900
weight = 100
; Announce position & expected time
announce-frequency=60
announce-holdtime=yes
announce-position=more
announce-position-limit=90

periodic-announce = digits/10,digits/20,digits/30,digits/40
periodic-announce-frequency=2

; Log each position change of each queue entry (many events!)
poslog = yes
; Shift announced position (and calculated time) by this value
offset = 10
; Minimum on-hold time for further calculations
minhold = 60
; Supress position increasement announces, when "no". Default "yes".
announce-backoff = no
; Say no more then X minutes
announce-time-limit = 20
; Delay seconds before doing first position/time announce
announce-delay = 40
; Play periodic announces no more then X times, X=-1 to play infinitely
periodic-announce-limit = 4


;member=LOCAL/NonExistent@iax/n
